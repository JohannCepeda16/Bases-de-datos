CREATE TABLE PERSONAS(
	CODIGO NUMBER NOT NULL,
	OPINION NUMBER NOT NULL, 
	NOMBRE VARCHAR2(50) NOT NULL, 
	GENERO VARCHAR2(1) NOT NULL, 
	TALLA VARCHAR2(3) NOT NULL, 
	NACIMIENTO DATE NOT NULL, 
	FAMILIA NUMBER(5)
);

CREATE TABLE BENEFICIARIOS (
  FAMILIA NUMBER(5, 0), 
  REPRESENTANTE NUMBER(1, 0),
  CODIGO NUMBER(7, 0),
  NOMBRE VARCHAR2(50 BYTE),
  GENERO CHAR(1 BYTE),
  NACIMIENTO CHAR(10 BYTE),
  CEDULA NUMBER(12, 0),
  CORREO VARCHAR2(40 BYTE),
  TELEFONO NUMBER(12, 0) 
);

CREATE TABLE ASIGNACIONES(
	NUMERO NUMBER(9) NOT NULL, 
	FECHA DATE NOT NULL, 
	ACEPTADO NUMBER(1)
	);
CREATE TABLE DETALLES(
	ORDEN NUMBER(4) NOT NULL, 
	BIEN VARCHAR2(5) NOT NULL, 
	ASIGNACION NUMBER(9) NOT NULL
	);
CREATE TABLE BIENES(
	CODIGO VARCHAR2(10) NOT NULL,
	NOMBRE VARCHAR2(30) NOT NULL,
	TIPO VARCHAR2(1) NOT NULL,
	MEDIDA VARCHAR2(2) NOT NULL,
	UNITARIO NUMBER(5) NOT NULL,
	RETIRADO NUMBER(1) NOT NULL
	);
CREATE TABLE OPINIONES(
	NUMERO NUMBER(5) NOT NULL,
	FECHA DATE NOT NULL,
	OPINION VARCHAR2(1) NOT NULL,
	JUSTIFICACION VARCHAR2(100) NOT NULL,
	BIEN VARCHAR2(10) NOT NULL
	);
CREATE TABLE FAMILIAS(
	NUMERO NUMBER(5) NOT NULL, 
	REPRESENTANTE NUMBER NOT NULL, 
	ASIGNACION NUMBER(9),
	LOCALIDAD VARCHAR2(15) NOT NULL
	);
CREATE TABLE ALOJAMIENTOS(
	ID INTEGER NOT NULL, 
	ORDEN NUMBER(4) NOT NULL, 
	PERSONAS NUMBER(4) NOT NULL, 
	INICIO DATE NOT NULL, 
	FIN DATE NOT NULL,
    LOCALIDAD VARCHAR2(15) NOT NULL
	);
CREATE TABLE VESTUARIOS(
	ID INTEGER NOT NULL, 
	ORDEN NUMBER(4) NOT NULL, 
	CANTIDAD NUMBER(4) NOT NULL, 
	TALLA VARCHAR2(3) NOT NULL
	);
CREATE TABLE PERECEDEROS(
	ID INTEGER NOT NULL, 
	ORDEN NUMBER(4) NOT NULL, 
	CANTIDAD NUMBER(4) NOT NULL, 
	VENCIMIENTO DATE NOT NULL
	);
CREATE TABLE GENERICOS(
	ID INTEGER NOT NULL, 
	ORDEN NUMBER(4) NOT NULL, 
	CANTIDAD NUMBER(4) NOT NULL
	);
CREATE TABLE ADULTOS(
	CODIGO NUMBER NOT NULL, 
	CEDULA NUMBER(12) NOT NULL, 
	CORREO VARCHAR2(40) NOT NULL
	);
CREATE TABLE TELEFONOS(
	ADULTO NUMBER(12) NOT NULL, 
	TELEFONO NUMBER(11) NOT NULL);
	
CREATE TABLE OPINIONES_GRUPALES(
	NUMERO NUMBER(5) NOT NULL, 
	RAZON XMLTYPE,
	ESTRELLAS NUMBER(1) NOT NULL
	);
CREATE TABLE LOCALIDADES(
	NOMBRE VARCHAR2(15) NOT NULL, 
	PRIORIDAD NUMBER(1) NOT NULL, 
	DEPARTAMENTO VARCHAR2(15) NOT NULL
	);

--ATRIBUTOS--
ALTER TABLE PERSONAS ADD CONSTRAINT CK_PERSONAS_GENERO
	CHECK(GENERO IN ('M','F','O'));
ALTER TABLE PERSONAS ADD CONSTRAINT CK_PERSONAS_TALLA
	CHECK(TALLA IN ('XS','S','M','L','XL'));
ALTER TABLE ASIGNACIONES ADD CONSTRAINT CK_ASIGNACIONES_ACEPTADO
	CHECK(ACEPTADO IN (0,1));
ALTER TABLE DETALLES ADD CONSTRAINT CK_DETALLES_ORDEN
	CHECK(ORDEN > 0);
ALTER TABLE BIENES ADD CONSTRAINT CK_BIENES_TIPO
	CHECK(TIPO IN ('G','P','V','A'));
ALTER TABLE BIENES ADD CONSTRAINT CK_BIENES_UNITARIO
	CHECK(UNITARIO >= 0);
ALTER TABLE BIENES ADD CONSTRAINT CK_BIENES_RETIRADO
	CHECK(RETIRADO IN (0,1));
ALTER TABLE OPINIONES ADD CONSTRAINT CK_OPINIONES_OPINION
	CHECK(OPINION IN ('E','B','R','M'));
ALTER TABLE TELEFONOS ADD CONSTRAINT CK_TELEFONOS_TELEFONO
	CHECK(LENGTH(TELEFONO) >= 7);

--PRIMARIAS--

ALTER TABLE PERSONAS ADD CONSTRAINT PK_PERSONAS 
	PRIMARY KEY(CODIGO);
ALTER TABLE ASIGNACIONES ADD CONSTRAINT PK_ASIGNACIONES 
	PRIMARY KEY(NUMERO);
ALTER TABLE BIENES ADD CONSTRAINT PK_BIENES 
	PRIMARY KEY(CODIGO);
ALTER TABLE OPINIONES ADD CONSTRAINT PK_OPINIONES 
	PRIMARY KEY(NUMERO);
ALTER TABLE FAMILIAS ADD CONSTRAINT PK_FAMILIAS 
	PRIMARY KEY(NUMERO);
ALTER TABLE ADULTOS ADD CONSTRAINT PK_ADULTOS 
	PRIMARY KEY(CEDULA); 
ALTER TABLE ALOJAMIENTOS ADD CONSTRAINT PK_ALOJAMIENTOS 
	PRIMARY KEY(ID);
ALTER TABLE PERECEDEROS ADD CONSTRAINT PK_PERECEDEROS 
	PRIMARY KEY(ID);
ALTER TABLE VESTUARIOS ADD CONSTRAINT PK_VESTUARIOS 
	PRIMARY KEY(ID);
ALTER TABLE GENERICOS ADD CONSTRAINT PK_GENERICOS 
	PRIMARY KEY(ID);
ALTER TABLE TELEFONOS ADD CONSTRAINT PK_TELEFONOS 
	PRIMARY KEY(ADULTO, TELEFONO);
ALTER TABLE OPINIONES_GRUPALES ADD CONSTRAINT PK_OPINIONES_GRUPALES 
	PRIMARY KEY(NUMERO);
ALTER TABLE DETALLES ADD CONSTRAINT PK_DETALLES
    PRIMARY KEY(ORDEN);
ALTER TABLE LOCALIDADES ADD CONSTRAINT PK_LOCALIDADES
    PRIMARY KEY(NOMBRE);

--UNICAS--
ALTER TABLE OPINIONES ADD CONSTRAINT UK_OPINIONES 
	UNIQUE(JUSTIFICACION);

--FORANEAS--
ALTER TABLE PERSONAS ADD CONSTRAINT FK_PERSONAS1 
	FOREIGN KEY(OPINION) REFERENCES OPINIONES(NUMERO) ON DELETE CASCADE;
ALTER TABLE DETALLES ADD CONSTRAINT FK_DETALLES1 
	FOREIGN KEY(BIEN) REFERENCES BIENES(CODIGO) ON DELETE CASCADE;
ALTER TABLE DETALLES ADD CONSTRAINT FK_DETALLES2 
	FOREIGN KEY(ASIGNACION) REFERENCES ASIGNACIONES(NUMERO) ON DELETE CASCADE;
ALTER TABLE PERECEDEROS ADD CONSTRAINT FK_PERECEDEROS_DETALLES 
	FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE GENERICOS ADD CONSTRAINT FK_GENERICOS_DETALLES 
	FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE ALOJAMIENTOS ADD CONSTRAINT FK_ALOJAMIENTOS_DETALLES 
	FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE VESTUARIOS ADD CONSTRAINT FK_VESTUARIOS_ORDEN 
	FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE TELEFONOS ADD CONSTRAINT FK_TELEFONOS_ADULTOS 
	FOREIGN KEY(ADULTO) REFERENCES ADULTOS(CEDULA) ON DELETE CASCADE;
ALTER TABLE ADULTOS ADD CONSTRAINT FK_ADULTOS_CODIGO 
	FOREIGN KEY(CODIGO) REFERENCES PERSONAS(CODIGO) ON DELETE CASCADE;
ALTER TABLE OPINIONES ADD CONSTRAINT FK_OPINIONES_BIEN 
	FOREIGN KEY(BIEN) REFERENCES BIENES(CODIGO) ON DELETE CASCADE;
ALTER TABLE FAMILIAS ADD CONSTRAINT FK_FAMILIAS_LOCALIDAD 
	FOREIGN KEY(LOCALIDAD) REFERENCES LOCALIDADES(NOMBRE) ON DELETE CASCADE;
ALTER TABLE FAMILIAS ADD CONSTRAINT FK_FAMILIAS_REPRESENTANTE
	FOREIGN KEY(REPRESENTANTE) REFERENCES PERSONAS(CODIGO) ON DELETE CASCADE;
ALTER TABLE FAMILIAS ADD CONSTRAINT FK_FAMILIAS_ASIGNACION
	FOREIGN KEY(ASIGNACION) REFERENCES ASIGNACIONES(NUMERO) ON DELETE CASCADE;
ALTER TABLE ALOJAMIENTOS ADD CONSTRAINT FK_ALOJAMIENTOS_LOCALIDAD
	FOREIGN KEY(LOCALIDAD) REFERENCES LOCALIDADES(NOMBRE) ON DELETE CASCADE;
ALTER TABLE OPINIONES_GRUPALES ADD CONSTRAINT FK_OPINIONES_GRUPALES_CODIGO
	FOREIGN KEY(NUMERO) REFERENCES OPINIONES(NUMERO);

--PoblarOK--
INSERT INTO BIENES VALUES('C25369', 'Liquido para vidrio', 'G', 'A', 18000, 0);
INSERT INTO BIENES VALUES('C493256', 'Jabon en polvo', 'G', 'A', 18000, 0);
INSERT INTO BIENES VALUES('C32014', 'Limpiador con caucho y esponja', 'G', 'A', 50000, 0);
INSERT INTO BIENES VALUES('LVEDA', 'Lavado de vidrios en edificios', 'G', 'A', 50000, 0);
INSERT INTO BIENES VALUES('LPISO', 'Limpieza acrilicos', 'G', 'A', 50000, 0);

INSERT INTO LOCALIDADES VALUES('Tunjuelito', 3, 'Bogota');
INSERT INTO LOCALIDADES VALUES('Barrios unidos', 5, 'Bogota');
INSERT INTO LOCALIDADES VALUES('Kenedy', 1, 'Bogota');

INSERT INTO ASIGNACIONES VALUES(1, to_date('1 06 2020', 'DD MM YYYY'), 1);
INSERT INTO ASIGNACIONES VALUES(3, to_date('2 06 2020', 'DD MM YYYY'), 0);
INSERT INTO ASIGNACIONES VALUES(2, to_date('3 06 2020', 'DD MM YYYY'), 1);

INSERT INTO BIENES VALUES('AA010', 'Casa campestre', 'A', 'A', 12500, 0);
INSERT INTO BIENES VALUES('AA020', 'Carro deportivo', 'G', 'A', 1500, 0);
INSERT INTO BIENES VALUES('AA011', 'Cacerola', 'G', 'A', 99999, 1);

INSERT INTO DETALLES VALUES(1,'AA010', 1);
INSERT INTO DETALLES VALUES(2,'AA020', 3);
INSERT INTO DETALLES VALUES(3,'AA011', 2);

INSERT INTO OPINIONES VALUES(1, to_date('12 11 2020', 'DD MM YYYY'), 'E', 'Me encanto', 'AA010');
INSERT INTO OPINIONES VALUES(2, to_date('13 11 2020', 'DD MM YYYY'), 'E', 'No me gusto', 'AA020');
INSERT INTO OPINIONES VALUES(3, to_date('14 11 2020', 'DD MM YYYY'), 'M', 'Esta bueno', 'AA011');

INSERT INTO OPINIONES_GRUPALES VALUES(1, 'TA BUENO', 5);

INSERT INTO PERSONAS VALUES (1, 1, 'Jorgito', 'M', 'XL', to_date('1 01 2000', 'DD MM YYYY'), 10);
INSERT INTO PERSONAS VALUES (2, 2, 'Laura', 'F', 'S', to_date('2 06 2001', 'DD MM YYYY'), 6);
INSERT INTO PERSONAS VALUES (3, 3, 'Martina', 'F', 'M', to_date('3 06 2002', 'DD MM YYYY'), 0);

INSERT INTO ADULTOS VALUES(1, 1000712829, 'jorgod@amsda.com');
INSERT INTO ADULTOS VALUES(2, 1222712829, 'laurel@amsdx.com');
INSERT INTO ADULTOS VALUES(3, 1333712829, 'martiprox@amsaa.com');

INSERT INTO ALOJAMIENTOS VALUES(1,1,2, to_date('12 11 2020', 'DD MM YYYY'), to_date('12 11 2021', 'DD MM YYYY') , 'Kenedy');

INSERT INTO VESTUARIOS VALUES(1,1, 15, 'XL');

INSERT INTO PERECEDEROS VALUES(1,1,2, to_date('12 11 2022', 'DD MM YYYY'));

INSERT INTO GENERICOS VALUES(1, 2, 1);
INSERT INTO GENERICOS VALUES(2, 3, 1);

INSERT INTO TELEFONOS VALUES(1000712829, 3105555556);
INSERT INTO TELEFONOS VALUES(1000712829, 3006646566);
INSERT INTO TELEFONOS VALUES(1333712829, 3155153443);

INSERT INTO FAMILIAS VALUES(10, 1, 1, 'Tunjuelito');
INSERT INTO FAMILIAS VALUES(0, 3, 2, 'Kenedy');
INSERT INTO FAMILIAS VALUES(6, 2, 3, 'Barrios unidos');

------------TRIGGERS NECESARIOS---------------------
--EL NUMERO, LA FECHA SE ASIGNAN AUTOMATICAMENTE--
CREATE OR REPLACE TRIGGER C_OPINION_NUMERO
BEFORE INSERT ON OPINIONES
FOR EACH ROW
DECLARE
    Y NUMBER;
BEGIN
    SELECT COUNT(*) INTO Y FROM OPINIONES;
    :NEW.NUMERO := Y+1;
END;

CREATE OR REPLACE TRIGGER C_OPINION_FECHA
BEFORE INSERT ON OPINIONES
FOR EACH ROW
BEGIN
    :NEW.FECHA := CURRENT_DATE;
END;

/*REGISTRAR ASIGNACION*/
--EL NUMERO, LA FECHA SE ASIGNAN AUTOMATICAMENTE--
CREATE OR REPLACE TRIGGER C_ASIGNACION_NUMERO
BEFORE INSERT ON ASIGNACIONES
FOR EACH ROW
DECLARE 
    Y NUMBER;
BEGIN
	SELECT COUNT(*) INTO Y FROM ASIGNACIONES;
    :NEW.NUMERO := Y+1;
END;

CREATE OR REPLACE TRIGGER C_ASIGNACION_FECHA
BEFORE INSERT ON ASIGNACIONES
FOR EACH ROW
BEGIN
    :NEW.FECHA := CURRENT_DATE;
END;

/*Lab 06*/
/*Consulte la información que actualmente está en esa tabla*/
SELECT * FROM MBDA.BENEFICIARIOS;

/* Inclúyanse como adultos. (Los dos como adultos de una nueva familia)*/
INSERT INTO MBDA.BENEFICIARIOS VALUES(51,1,2168129,'Luis Giraldo', 'M', '1-SEP-2000', '1000713816', 'zeuspipe@gmail.com', '3105555556');
INSERT INTO MBDA.BENEFICIARIOS VALUES(51,0,2143369,'Johann Cepeda', 'M', '16/04/1998', '1234567891', 'johann.cepeda@mail.escuelaing.edu.co', '3108868329');

/* Traten de modificarse o borrarse. ¿qué pasa?*/
DELETE FROM MBDA.BENEFICIARIOS WHERE CODIGO = 2143369;
DELETE FROM MBDA.BENEFICIARIOS WHERE CODIGO = 2168129;
/*NOS ARROJA UN ERROR DEBIDO A QUE NO TENEMOS LOS PERMISOS NECESARIOS*/

/*Escriban la instrucción necesaria para otorgar los permisos que actualmente tiene la tabla BENEFICIARIOS. ¿quién la escribió?*/
GRANT UPDATE, DELETE ON MBDA.BENEFICIARIOS TO BD2143369;
/*LA ESCRIBIO EL ADMINISTRADOR DE LA BASE DE DATOS*/

/*Escriban las instrucciones necesarias para importar los datos de esa tabla a su base de datos.*/
DROP TABLE BENEFICIARIOS;
INSERT INTO BENEFICIARIOS 
SELECT FAMILIA, REPRESENTANTE, CODIGO, NOMBRE, GENERO, NACIMIENTO, CEDULA, CORREO, TELEFONO FROM MBDA.BENEFICIARIOS;
SELECT * FROM BENEFICIARIOS;

------------------CRUDE-------------------------
CREATE OR REPLACE PACKAGE PC_OPINION IS
    PROCEDURE AD_OPINION (XOPINION IN VARCHAR2, XJUSTIFICACION IN VARCHAR2, XBIEN IN VARCHAR2);
    PROCEDURE MOD_OPINION_JUST (XNUMERO IN NUMBER, XJUSTIFICACION IN VARCHAR2);
    PROCEDURE MOD_OPINION_DET(XNUMERO IN NUMBER, XOPINION IN VARCHAR2);
    PROCEDURE DEL_OPINION (XNUMERO IN NUMBER);
END PC_OPINION;

CREATE OR REPLACE PACKAGE PC_BIENES IS
    PROCEDURE AD_BIEN(XNOMBRE IN VARCHAR2, XTIPO IN VARCHAR2, XMEDIDA IN VARCHAR2, XUNITARIO IN NUMBER);
    PROCEDURE MOD_BIEN(XCODIGO IN NUMBER, XRETIRADO IN NUMBER);
    FUNCTION CO_RECLAMOS(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR;
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR;
END PC_BIENES;

CREATE OR REPLACE PACKAGE PC_BENEFICIARIOS IS
    PROCEDURE AD_BENEFICIARIO(XFAMILIA IN NUMBER, XREPRESENTANTE IN NUMBER, XCODIGO IN NUMBER, XNOMBRE IN VARCHAR2, XGENERO IN CHAR, XNACIMIENTO IN CHAR, XCEDULA IN NUMBER, XCORREO IN VARCHAR2, XTELEFONO IN NUMBER);
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR;
END PC_BENEFICIARIOS;

CREATE OR REPLACE PACKAGE PC_ASIGNACION IS
    PROCEDURE AD_ASIGNACION(XACEPTADO IN NUMBER);
END PC_ASIGNACION;


-------------------CRUDI----------------------------
CREATE OR REPLACE PACKAGE BODY PC_OPINION IS
    PROCEDURE AD_OPINION(XOPINION IN VARCHAR2, XJUSTIFICACION IN VARCHAR2, XBIEN IN VARCHAR2) IS
        BEGIN
            INSERT INTO OPINIONES(OPINION, JUSTIFICACION, BIEN) VALUES (XOPINION, XJUSTIFICACION, XBIEN);
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                    RAISE_APPLICATION_ERROR(-20039, 'NO SE PUEDE INSERTAR LA OPINION');
        END;
        
    PROCEDURE MOD_OPINION_JUST(XNUMERO IN NUMBER, XJUSTIFICACION IN VARCHAR2) IS
        BEGIN
            UPDATE OPINIONES SET JUSTIFICACION = XJUSTIFICACION WHERE NUMERO = XNUMERO;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                    Raise_application_error(-20001,'SOLO UNA MODIFICACION A LA VEZ');
        END;
    PROCEDURE MOD_OPINION_DET(XNUMERO IN NUMBER, XOPINION IN VARCHAR2) IS
        BEGIN
            UPDATE OPINIONES SET OPINION = XOPINION WHERE NUMERO = XNUMERO;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20001, 'SOLO UNA MODIFICACION A LA VEZ');
        END;
        
    PROCEDURE DEL_OPINION(XNUMERO IN NUMBER) IS
        BEGIN
            DELETE FROM OPINIONES WHERE NUMERO = XNUMERO;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20001, 'NO SE PUEDE ELIMINAR');
        END;
END PC_OPINION;

CREATE OR REPLACE PACKAGE BODY PC_BIENES IS
    PROCEDURE AD_BIEN(XNOMBRE IN VARCHAR2, XTIPO IN VARCHAR2, XMEDIDA IN VARCHAR2, XUNITARIO IN NUMBER) IS
    BEGIN
        INSERT INTO BIENES(NOMBRE, TIPO, MEDIDA, UNITARIO) VALUES(XNOMBRE, XTIPO, XMEDIDA, XUNITARIO);
        COMMIT;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;
                RAISE_APPLICATION_ERROR(-20001, 'ERROR INGRESANDO EL BIEN');
    END;
    
    PROCEDURE MOD_BIEN(XCODIGO IN NUMBER, XRETIRADO IN NUMBER) IS 
    BEGIN
        UPDATE BIENES SET RETIRADO = XRETIRADO WHERE CODIGO = XCODIGO;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
                RAISE_APPLICATION_ERROR(-20001, 'NO SE PUEDE ACTUALIZAR');
    END;
    
    FUNCTION CO_RECLAMOS(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR IS CO_R SYS_REFCURSOR;
        BEGIN
            OPEN CO_R FOR
                SELECT CODIGO 
                FROM BIENES
                JOIN OPINIONES ON(OPINIONES.BIEN = CODIGO)
                WHERE OPINIONES.OPINION = 'M';
            RETURN CO_R;
        END;
        
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR IS CO_R SYS_REFCURSOR;
        BEGIN
            OPEN CO_R FOR
                SELECT CODIGO
                FROM BIENES
                JOIN OPINIONES ON(OPINIONES.BIEN = CODIGO)
                WHERE OPINIONES.OPINION = 'E';
            RETURN CO_R;
        END;
END PC_BIENES;

CREATE OR REPLACE PACKAGE BODY PC_BENEFICIARIOS IS
    PROCEDURE AD_BENEFICIARIO(XFAMILIA IN NUMBER, XREPRESENTANTE IN NUMBER, XCODIGO IN NUMBER, XNOMBRE IN VARCHAR2, XGENERO IN CHAR, XNACIMIENTO IN CHAR, XCEDULA IN NUMBER, XCORREO IN VARCHAR2, XTELEFONO IN NUMBER) IS
    BEGIN
        INSERT INTO BENEFICIARIOS VALUES(XFAMILIA, XREPRESENTANTE, XCODIGO, XNOMBRE, XGENERO, XNACIMIENTO, XCEDULA, XCORREO, XTELEFONO);
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20001, 'NO SE PUDO INGRESAR EL BENEFICIARO');
    END;
    
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR IS CO_R SYS_REFCURSOR;
        BEGIN
            OPEN CO_R FOR
                SELECT CODIGO
                FROM BIENES
                JOIN OPINIONES ON(OPINIONES.BIEN = CODIGO)
                WHERE OPINIONES.OPINION = 'E';
            RETURN CO_R;
        END;
    
END PC_BENEFICIARIOS;

CREATE OR REPLACE PACKAGE BODY PC_ASIGNACION IS
    PROCEDURE AD_ASIGNACION(XACEPTADO IN NUMBER) IS
    BEGIN
        INSERT INTO ASIGNACIONES(ACEPTADO) VALUES(XACEPTADO);
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20001, 'NO SE PUDO INGRESAR LA ASIGNACION');
    END;
END PC_ASIGNACION;

--------------------XCRUD-------------------------
DROP PACKAGE PC_OPINION;
DROP PACKAGE PC_BIENES;
DROP PACKAGE PC_BENEFICIARIOS;
DROP PACKAGE PC_AUDITOR;

----------------------CRUD OK----------------------
/*BENEFICIARIO*/
EXECUTE PC_OPINION.AD_OPINION('M', 'POR QUE SI', 'LPISO');
EXECUTE PC_OPINION.MOD_OPINION_JUST(1, 'PUES POR QUE SI');
EXECUTE PC_OPINION.MOD_OPINION_DET(1, 'M');
EXECUTE PC_OPINION.DEL_OPINION(5);
/*AUDITOR*/
EXECUTE PA_AUDITOR.AD_BENEFICIARIOS(10, 1, 2, 'JORGITO', 'M', '10/15/1998', 123456, 'JORGITO@STUDIOS.COM', 12345);
EXECUTE PA_AUDITOR.AD_ASIGNACION(1);

-----------------------CRUD NO OK------------------
/*INCLUIR MENOS DATOS QUE EL PROCEDIMIENTO ACEPTA*/
EXECUTE PC_OPINION.AD_OPINION('M', 'POR QUE SI');
/*MODIFICAR DETALLE DE LA OPINION CON VALORES NO APTOS*/
EXECUTE PC_OPINION.MOD_OPINION_DET(2, 'MASDFADSF');

/*AUDITOR*/
/*INCLUIR TIPOS DE DATOS ERRONEOS*/
EXECUTE PA_AUDITOR.AD_BENEFICIARIOS('10', '1', '2', 'JORGITO', 'M', '10/15/1998', 123456);
/*DATOS INCONSISTENTES*/
EXECUTE PA_AUDITOR.AD_ASIGNACION('1','2','3');

--------------------ACTORESE----------------
CREATE OR REPLACE PACKAGE PA_BENEFICIARIO IS
    PROCEDURE AD_OPINION (XOPINION IN VARCHAR2, XJUSTIFICACION IN VARCHAR2, XBIEN IN VARCHAR2);
    PROCEDURE MOD_OPINION_JUST (XNUMERO IN NUMBER, XJUSTIFICACION IN VARCHAR2);
    PROCEDURE MOD_OPINION_DET(XNUMERO IN NUMBER, XOPINION IN VARCHAR2);
    PROCEDURE DEL_OPINION (XNUMERO IN NUMBER);
    /*CONSULTAS*/
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR;
END PA_BENEFICIARIO;

CREATE OR REPLACE PACKAGE PA_AUDITOR IS
    PROCEDURE AD_BENEFICIARIOS(XFAMILIA IN NUMBER, XREPRESENTANTE IN NUMBER, XCODIGO IN NUMBER, XNOMBRE IN VARCHAR2, XGENERO IN VARCHAR2, XNACIMIENTO IN VARCHAR2, XCEDULA IN NUMBER, XCORREO IN VARCHAR2, XTELEFONO IN NUMBER);
    PROCEDURE AD_ASIGNACION(XACEPTADO IN NUMBER);
    /*CONSULTAS*/
    FUNCTION CO_RECLAMOS(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR;
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR;
END PA_AUDITOR;

----------------------ACTORESI----------------------
CREATE OR REPLACE PACKAGE BODY PA_BENEFICIARIO IS
    PROCEDURE AD_OPINION(XOPINION IN VARCHAR2, XJUSTIFICACION IN VARCHAR2, XBIEN IN VARCHAR2) IS
        BEGIN
            PC_OPINION.AD_OPINION(XOPINION, XJUSTIFICACION, XBIEN);
        END;
    PROCEDURE MOD_OPINION_JUST(XNUMERO IN NUMBER, XJUSTIFICACION IN VARCHAR2) IS
        BEGIN
            PC_OPINION.MOD_OPINION_JUST(XNUMERO, XJUSTIFICACION);
        END;
    PROCEDURE MOD_OPINION_DET(XNUMERO IN NUMBER, XOPINION IN VARCHAR2) IS
    BEGIN
        PC_OPINION.MOD_OPINION_DET(XNUMERO, XOPINION);
    END;
    PROCEDURE DEL_OPINION(XNUMERO IN NUMBER) IS
    BEGIN
        PC_OPINION.DEL_OPINION(XNUMERO);
    END;
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR IS CO_RE SYS_REFCURSOR;
    BEGIN
        CO_RE := PC_BENEFICIARIOS.CO_POPULARES(XNUMERO);
    RETURN CO_RE;
    END;
END PA_BENEFICIARIO;

CREATE OR REPLACE PACKAGE BODY PA_AUDITOR IS
    PROCEDURE AD_BENEFICIARIOS(XFAMILIA IN NUMBER, XREPRESENTANTE IN NUMBER, XCODIGO IN NUMBER, XNOMBRE IN VARCHAR2, XGENERO IN VARCHAR2, XNACIMIENTO IN VARCHAR2, XCEDULA IN NUMBER, XCORREO IN VARCHAR2, XTELEFONO IN NUMBER) IS
    BEGIN
        PC_BENEFICIARIOS.AD_BENEFICIARIO(XFAMILIA, XREPRESENTANTE, XCODIGO, XNOMBRE, XGENERO, XNACIMIENTO, XCEDULA, XCORREO, XTELEFONO);
    END;
    PROCEDURE AD_ASIGNACION(XACEPTADO IN NUMBER) IS
    BEGIN
        PC_ASIGNACION.AD_ASIGNACION(XACEPTADO);
    END;
    
    FUNCTION CO_RECLAMOS(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR IS CO_RE SYS_REFCURSOR;
    BEGIN
        CO_RE := PC_BIENES.CO_RECLAMOS(XNUMERO);
    RETURN CO_RE;
    END;
    
    FUNCTION CO_POPULARES(XNUMERO IN NUMBER) RETURN SYS_REFCURSOR IS CO_RE SYS_REFCURSOR;
    BEGIN
        CO_RE := PC_BIENES.CO_POPULARES(XNUMERO);
    RETURN CO_RE;
    END;
END PA_AUDITOR;

-------------------------SEGURIDAD--------------------
/*ASIGNAR ROLES BENEFICIARIO*/
GRANT EXECUTE ON PA_BENEFICIARIO TO BD2168129;
GRANT EXECUTE ON PA_BENEFICIARIO TO BD2161159;
/*CREAR ROL AUDITOR*/
CREATE ROLE AUDITORAUX;
GRANT AUDITORAUX TO BD2168129;
GRANT AUDITORAUX TO BD2161159;
GRANT EXECUTE ON PA_AUDITOR TO AUDITORAUX;
/*XROLE*/
DROP ROLE AUDITORAUX;

----------------------SEGURIDAD OK------------------------
SELECT PA_BENEFICIARIO.CO_POPULARES(1) FROM DUAL;
SELECT PA_AUDITOR.CO_RECLAMOS(1) FROM DUAL;
SELECT PA_AUDITOR.CO_POPULARES(1) FROM DUAL;

----------------------SEGURIDAD NO OK---------------------
SELECT PA_BENEFICIARIO.CO_RECLAMOS(1) FROM DUAL;
SELECT PA_AUDITOR.CO_INTERES(1) FROM DUAL;
SELECT PA_AUDITOR.CO_POPULAR(2) FROM DUAL;

-------------------------CASOS DE PRUEBA----------------------------
/*CREAMOS EL USUARIO JORGITO QUE ES UN BENEFICIARO*/
CREATE ROLE JORGITO;
/*LO ASIGNAMOS AL USUARIO DE LA DB*/
GRANT JORGITO TO BD2143369;
/*LE OTORGAMOS EL ROD DE BENEFICIARIO*/
GRANT EXECUTE ON PA_BENEFICIARIO TO JORGITO;
/*JORGITO QUIERE DEJAR SU OPINION SOBRE UN BIEN ADQUIRIDO*/
EXECUTE PA_BENEFICIARIO.AD_OPINION('E','ME GUSTO MUCHO', 'LVEDA');
/*JORGITO SE DIO CUENTA QUE EL PANTALON ESTABA ROTO ASI QUE DECIDIO MODIFICAR SU OPINION*/
SELECT * FROM OPINIONES;
EXECUTE PA_BENEFICIARIO.MOD_OPINION_DET(5, 'M');
SELECT * FROM OPINIONES;
/*PERO SU JUSTIFICACION NO CONCORDABA, ENTONCES LA MODIFICO TAMBIEN*/
SELECT * FROM OPINIONES;
EXECUTE PA_BENEFICIARIO.MOD_OPINION_JUST(5, 'ROTO');
SELECT * FROM OPINIONES;
/*CUANDO EL DONANTE SE DIO CUENTA, LE COMPRO UNO NUEVO, ASI QUE ELIMINO SU OPINION*/
SELECT * FROM OPINIONES;
EXECUTE PA_BENEFICIARIO.DEL_OPINION(5);
SELECT * FROM OPINIONES;
/*DECIDIO AGREGAR UNA NUEVA OPINION*/
SELECT * FROM OPINIONES;
EXECUTE PA_BENEFICIARIO.AD_OPINION('E', 'ESTE NO ESTA ROTO', 'AA011');
SELECT * FROM OPINIONES;
/*FINALMENTE, QUIERE ALGO PARA SU HERMANO, ASI QUE DECIDE BUSCAR LOS BIENES MAS POPULARES*/
SELECT PA_BENEFICIARIO.CO_POPULARES(1) FROM DUAL;
SELECT * FROM OPINIONES;
