--Tablas--
CREATE TABLE PERSONAS(CODIGO NUMBER NOT NULL, OPINION NUMBER NOT NULL, NOMBRE VARCHAR2(50) NOT NULL, GENERO VARCHAR2(1) NOT NULL, TALLA VARCHAR2(3) NOT NULL, NACIMIENTO DATE NOT NULL, FAMILIA NUMBER(5));
CREATE TABLE ASIGNACIONES(NUMERO NUMBER(9) NOT NULL, FECHA DATE NOT NULL, ACEPTADO NUMBER(1));
CREATE TABLE DETALLES(ORDEN NUMBER(4) NOT NULL, BIEN VARCHAR2(5) NOT NULL, ASIGNACION NUMBER(9) NOT NULL);
CREATE TABLE BIENES(CODIGO VARCHAR2(5) NOT NULL,NOMBRE VARCHAR2(30) NOT NULL,TIPO VARCHAR2(1) NOT NULL,MEDIDA VARCHAR2(2) NOT NULL,UNITARIO NUMBER(5) NOT NULL,RETIRADO NUMBER(1) NOT NULL);
CREATE TABLE OPINIONES(NUMERO NUMBER(5) NOT NULL,FECHA DATE NOT NULL,OPINION VARCHAR2(1) NOT NULL,JUSTIFICACION VARCHAR2(20) NOT NULL,BIEN INTEGER NOT NULL);
CREATE TABLE FAMILIAS(NUMERO NUMBER(5) NOT NULL, REPRESENTANTE NUMBER NOT NULL, ASIGNACION NUMBER(9));
CREATE TABLE ALOJAMIENTOS(ORDEN VARCHAR2(5) NOT NULL, PERSONAS NUMBER(4) NOT NULL, INICIO DATE NOT NULL, FIN DATE NOT NULL);
CREATE TABLE VESTUARIOS(ORDEN VARCHAR2(5) NOT NULL, CANTIDAD NUMBER(4) NOT NULL, TALLA VARCHAR2(3) NOT NULL);
CREATE TABLE PERECEDEROS(ORDEN VARCHAR2(5) NOT NULL, CANTIDAD NUMBER(4) NOT NULL, VENCIMIENTO DATE);
CREATE TABLE GENERICOS(ORDEN VARCHAR2(5) NOT NULL, CANTIDAD NUMBER(4) NOT NULL);
CREATE TABLE ADULTOS(CEDULA NUMBER(12) NOT NULL, CORREO VARCHAR2(40) NOT NULL);
CREATE TABLE TELEFONOS(ADULTO NUMBER(12) NOT NULL, TELEFONO NUMBER(11) NOT NULL);
CREATE TABLE OPINIONES_GRUPALES(NUMERO NUMBER(5) NOT NULL, RAZON VARCHAR2(250), ESTRELLAS NUMBER(1));

--XTablas--
DROP TABLE PERSONAS;
DROP TABLE ASIGNACIONES;
DROP TABLE DETALLES;
DROP TABLE BIENES;
DROP TABLE OPINIONES;
DROP TABLE FAMILIAS;
DROP TABLE ALOJAMIENTO;
DROP TABLE VESTUARIO;
DROP TABLE PERECEDEROS;
DROP TABLE GENERICO;
DROP TABLE TELEFONOS;
DROP TABLE ADULTOS;


--Poblando--


--PoblarOK--
INSERT INTO PERSONAS VALUES (1, 1, 'Jorgito', 'M', 'XL', to_date('1 01 2000', 'DD MM YYYY'), 10);
INSERT INTO PERSONAS VALUES (2, 2, 'Laura', 'F', 'S', to_date('2 06 2001', 'DD MM YYYY'), 6);
INSERT INTO PERSONAS VALUES (3, 3, 'Martina', 'F', 'M', to_date('3 06 2002', 'DD MM YYYY'), 0);

INSERT INTO ASIGNACIONES VALUES(1, to_date('1 06 2020', 'DD MM YYYY'), 1);
INSERT INTO ASIGNACIONES VALUES(3, to_date('2 06 2020', 'DD MM YYYY'), 0);
INSERT INTO ASIGNACIONES VALUES(2, to_date('3 06 2020', 'DD MM YYYY'), 1);

INSERT INTO DETALLES VALUES(152,'AA010', 3);
INSERT INTO DETALLES VALUES(120,'AA010', 1);
INSERT INTO DETALLES VALUES(15,'AA011', 3);

INSERT INTO BIENES VALUES('AA010', 'Casa campestre', 'A', 'M', 12500, 0);
INSERT INTO BIENES VALUES('AA020', 'Carro deportivo', 'G', 'XS', 1500, 0);
INSERT INTO BIENES VALUES('AA011', 'Mansion', 'G', 'BG', 99999, 1);

INSERT INTO OPINIONES VALUES(1, to_date('12 11 2020', 'DD MM YYYY'), 'E', 'Me encanto', 1);
INSERT INTO OPINIONES VALUES(2, to_date('13 11 2020', 'DD MM YYYY'), 'M', 'No me gusto', 1);
INSERT INTO OPINIONES VALUES(3, to_date('14 11 2020', 'DD MM YYYY'), 'B', 'Esta bueno', 3);

INSERT INTO FAMILIAS VALUES(10, 1, 1);
INSERT INTO FAMILIAS VALUES(6, 2, 3);
INSERT INTO FAMILIAS VALUES(0, 3, 2);

--PoblarNoOK--
--INGRESAR UNA PERSONA CON UN NUMERO COMO VARCHAR--
INSERT INTO PERSONAS VALUES ('1', 'E', 'Jorgito', 1, 'XL', to_date('12 06 2000', 'DD MM YYYY'), 10);
--INGRESAR UNA ASIGNACION CON # FAMILIA COMO STRING--
INSERT INTO ASIGNACIONES VALUES(3, to_date('12 06 2020', 'DD MM YYYY'), 1, 'SEIS');
--INGRESAR DETALLES COMO VARCHARS--
INSERT INTO DETALLES VALUES('15 2', 'AA010', ' 3');
--INGRESAR BIENES CON MAS DIGITOS DE LOS PERMITIDOS--
INSERT INTO BIENES VALUES(3, 'Mansion', 'G', 'BG', 9999999, 1);
--INGRESAR MAL LA FECHA--
INSERT INTO OPINIONES VALUES(3,'12 06 2021', 'B', 'Ta bueno', 9999);
-----------
--INGRESAR UNA PERSONA CON UN GENERO QUE NO EXISTE--
INSERT INTO PERSONAS VALUES (1, 3, 'FABIO', 'P', 'XL', to_date('12 07 2019', 'DD MM YYYY'), 10);
--INGRESAR UNA ASIGNACION CON UN VALOR DIFERENTE DE UNO O DE CERO EN ACEPTADO--
INSERT INTO ASIGNACIONES VALUES(3, to_date('12 06 2019', 'DD MM YYYY'), 8, 6);
--INGRESAR BIENES CON TALLAS QUE NO PERTENECEN--
INSERT INTO BIENES VALUES(3, 'Mansion', 'G', 'TA', 99999, 1);
--INGRESAR OPINIONES CON UNA OPINION QUE NO EXISTE--
INSERT INTO OPINIONES VALUES(103, to_date('12 06 2022', 'DD MM YYYY'), 'X', 'Justificacion', 1);
INSERT INTO OPINIONES VALUES(103, to_date('12 06 2023', 'DD MM YYYY'), 'R', 'Justificacion', 1);

--XPoblar--
TRUNCATE TABLE PERSONAS;
TRUNCATE TABLE ASIGNACIONES;
TRUNCATE TABLE DETALLES;
TRUNCATE TABLE BIENES;
TRUNCATE TABLE OPINIONES;


--Protegiendo--

--Atributos--
ALTER TABLE PERSONAS ADD CONSTRAINT CK_PERSONAS_GENERO
	CHECK(GENERO IN ('M','F','O'));
ALTER TABLE PERSONAS ADD CONSTRAINT CK_PERSONAS_TALLA
	CHECK(TALLA IN ('XS','S','M','L','XL'));
ALTER TABLE ASIGNACIONES ADD CONSTRAINT CK_ASIGNACIONES_ACEPTADO
	CHECK(ACEPTADO IN (0,1));
ALTER TABLE DETALLES ADD CONSTRAINT CK_DETALLES_ORDEN
	CHECK(ORDEN > 0);
ALTER TABLE BIENES ADD CONSTRAINT CK_BIENES_TIPO
	CHECK(TIPO IN ('G','P','V','A'));
ALTER TABLE BIENES ADD CONSTRAINT CK_BIENES_UNITARIO
	CHECK(UNITARIO >= 0);
ALTER TABLE BIENES ADD CONSTRAINT CK_BIENES_RETIRADO
	CHECK(RETIRADO IN (0,1));
ALTER TABLE OPINIONES ADD CONSTRAINT CK_OPINIONES_OPINION
	CHECK(OPINION IN ('E','B','R','M'));
ALTER TABLE TELEFONOS ADD CONSTRAINT CK_TELEFONOS_TELEFONO
	CHECK(LENGTH(TELEFONO) >= 7);

--Primarias--
ALTER TABLE PERSONAS ADD CONSTRAINT PK_PERSONAS PRIMARY KEY(CODIGO);
ALTER TABLE ASIGNACIONES ADD CONSTRAINT PK_ASIGNACIONES PRIMARY KEY(NUMERO);
ALTER TABLE BIENES ADD CONSTRAINT PK_BIENES PRIMARY KEY(CODIGO);
ALTER TABLE OPINIONES ADD CONSTRAINT PK_OPINIONES PRIMARY KEY(NUMERO);
ALTER TABLE FAMILIAS ADD CONSTRAINT PK_FAMILIAS PRIMARY KEY(NUMERO);
ALTER TABLE ADULTOS ADD CONSTRAINT PK_ADULTOS PRIMARY KEY(CEDULA); 
ALTER TABLE ALOJAMIENTOS ADD CONSTRAINT PK_ALOJAMIENTOS PRIMARY KEY(ORDEN);
ALTER TABLE PERECEDEROS ADD CONSTRAINT PK_PERECEDEROS PRIMARY KEY(ORDEN);
ALTER TABLE VESTUARIOS ADD CONSTRAINT PK_VESTUARIOS PRIMARY KEY(ORDEN);
ALTER TABLE GENERICOS ADD CONSTRAINT PK_GENERICOS PRIMARY KEY(ORDEN);
ALTER TABLE TELEFONOS ADD CONSTRAINT PK_TELEFONOS PRIMARY KEY(ADULTO);
ALTER TABLE OPINIONES_GRUPALES ADD CONSTRAINT PK_OPINIONES_GRUPALES PRIMARY KEY(NUMERO);


--Unicas--
ALTER TABLE OPINIONES ADD CONSTRAINT UK_OPINIONES UNIQUE(JUSTIFICACION);

--Foraneas--
ALTER TABLE PERSONAS ADD CONSTRAINT FK_PERSONAS1 FOREIGN KEY(OPINION) REFERENCES OPINIONES(NUMERO) ON DELETE CASCADE;
ALTER TABLE PERSONAS ADD CONSTRAINT FK_PERSONAS2 FOREIGN KEY(FAMILIA) REFERENCES FAMILIAS(NUMERO) ON DELETE CASCADE;
ALTER TABLE ASIGNACIONES ADD CONSTRAINT FK_ASIGNACIONES FOREIGN KEY(FAMILIA) REFERENCES FAMILIAS(NUMERO) ON DELETE CASCADE;
ALTER TABLE DETALLES ADD CONSTRAINT FK_DETALLES1 FOREIGN KEY(BIEN) REFERENCES BIENES(CODIGO) ON DELETE CASCADE;
ALTER TABLE DETALLES ADD CONSTRAINT FK_DETALLES2 FOREIGN KEY(ASIGNACION) REFERENCES ASIGNACIONES(NUMERO) ON DELETE CASCADE;
ALTER TABLE PERECEDEROS ADD CONSTRAINT FK_PERECEDEROS_DETALLES FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE GENERICOS ADD CONSTRAINT FK_GENERICOS_DETALLES FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE ALOJAMIENTOS ADD CONSTRAINT FK_ALOJAMIENTOS_DETALLES FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE VESTUARIOS ADD CONSTRAINT FK_VESTUARIOS_ORDEN FOREIGN KEY(ORDEN) REFERENCES DETALLES(ORDEN) ON DELETE CASCADE;
ALTER TABLE TELEFONOS ADD CONSTRAINT FK_TELEFONOS_ADULTOS FOREIGN KEY(ADULTO) REFERENCES ADULTOS(CEDULA) ON DELETE CASCADE;

--PoblarNoOK--
--CK_GENERO--
INSERT INTO PERSONAS VALUES ('1', 'E', 'FABIO', 'P', 'XL', '9/24/2017', 10);
--CK_ACEPTADO--
INSERT INTO ASIGNACIONES VALUES(3, '12/02/2020', 8, 6);
--CK_TALLA--
INSERT INTO BIENES VALUES(3, 'Mansion', 'G', 'TA', 9999999, 1);
--CK_OPINION--
INSERT INTO OPINIONES VALUES(3, to_date('12 06 2000', 'DD MM YYYY'), 'X', 'Xublime', 1);
INSERT INTO OPINIONES VALUES(3, to_date('12 06 2000', 'DD MM YYYY'), 'R', 'Recio', 1);


/*CICLO 1 CRUD: ATENCION A BENEFICIARIOS*/

/*TUPLAS*/
--Tuplas ok no hay
--Tuplas no ok no hay

/*ACCIONES*/
	
	--ESTAN DEFINIDAS EN LAS LLAVES FORANEAS

--ACCIONES OK
	
	SELECT * FROM PERSONAS;
	DELETE FROM PERSONAS WHERE NOMBRE = 'Jorgito';
	
	

/*DISPARADORES*/

/*REGISTRAR OPINION*/

/*EL NUMERO, LA FECHA SE ASIGNAN AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER C_OPINION_NUMERO
AFTER INSERT ON OPINIONES
BEGIN
	/*NUMERO*/
    UPDATE OPINIONES SET NUMERO = (SELECT NUMERO FROM (
    SELECT NUMERO FROM OPINIONES ORDER BY NUMERO DESC
    ) WHERE ROWNUM = 1) + 1;
	
	/*FECHA*/
	UPDATE OPINIONES SET FECHA = CURRENT_DATE;
END;

/*NO SE PUEDE REGISTRAR UNA OPINION DE UN BIEN RETIRADO*/
CREATE OR REPLACE TRIGGER C_REGITRAR_RETIRADO
BEFORE INSERT ON OPINIONES
FOR EACH ROW
BEGIN
	IF :NEW.BIEN IN (SELECT CODIGO FROM(
		SELECT CODIGO
		FROM BIENES
		WHERE RETIRADO = 1
	))THEN 
	  RAISE_APPLICATION_ERROR( -20001, 'NO SE PUEDE REGISTRAR UNA OPINION DE UN BIEN RETIRADO');
    END IF;
END;

/*LA PERSONA QUE REGISTRA LA OPINION DEBE PERTENECER A LA FAMILIA QUE ACEPTO EL BIEN HACE MENOS DE 3 MESES*/
CREATE OR REPLACE TRIGGER C_FAMILY_OPINION
BEFORE INSERT ON OPINIONES
FOR EACH ROW
BEGIN
	IF :NEW.NUMERO NOT IN (
		SELECT FAMILIA
		FROM ASIGNACIONES
		JOIN PERSONAS ON (ASGINACIONES.FAMILIA = PERSONAS.FAMILIA)
		JOIN OPINIONES ON (:NEW.NUMERO = PERSONAS.OPINION)
		WHERE ESTADO = 1 AND :NEW.FECHA > ASIGNACIONES.FECHA )
	 THEN	RAISE_APPLICATION_ERROR(-20001, 'LA PERSONA QUE REGISTRA LA OPINION DEBE PERTENECER A LA FAMILIA QUE ACEPTO EL BIEN HACE MENOS DE 3 MESES');
    END IF;
END;

/*Si la opinión es M: alo, la justificación debe contener la palabra MALO y tener una longitud mayor a 10*/
CREATE OR REPLACE TRIGGER C_OPINION_JUSTIF
BEFORE INSERT ON OPINIONES
FOR EACH ROW
WHEN(:NEW.OPINION = 'M')
BEGIN
	IF :NEW.JUSTIFICACION NOT LIKE '%MALO%' AND LENGTH(:NEW.JUSTIFICACION) < 10
        THEN RAISE_APPLICATION_ERROR(-20001, 'La justificacion debe contener la palabra MALO y tener una longitud mayor a 10');
	END IF;
END;

-- Las opiniones grupales sólo las puede dar el representante familiar.
CREATE OR REPLACE TRIGGER C_OPINION_REPRESENTANTE
BEFORE INSERT ON OPINIONES_GRUPALES
DECLARE
COD NUMBER;
BEGIN
	COD := :NEW.CODIGO;
	IF COD NOT IN (
		SELECT REPRESENTANTE 
		FROM FAMILIAS 
		JOIN PERSONAS ON (COD = PERSONAS.OPINION)
		) THEN RAISE_APPLICATION_ERROR(-20001, 'Las opiniones grupales solo las puede dar el representante familiar');
	END IF;
END;

/*EL UNICO DATO QUE SE PUEDE MODIFICAR ES Justificacion*/
CREATE OR REPLACE TRIGGER C_JISTIF_MODF
AFTER UPDATE ON OPINIONES
BEGIN
	:NEW.NUMERO := :OLD.NUMERO;
	:NEW.FECHA := :OLD.FECHA;
	:NEW.OPINION := :OLD.OPINION;
	:NEW.BIEN := :OLD.BIEN;
END;

/*Sólo es posible eliminar la opinión si es la última registrada.*/
CREATE OR REPLACE TRIGGER C_DELETE_OPINION
BEFORE DELETE ON OPINIONES
BEGIN
	IF :OLD.NUMERO NOT IN (SELECT NUMERO FROM (
    SELECT NUMERO FROM OPINIONES ORDER BY NUMERO DESC
    ) WHERE ROWNUM = 1) 
		THEN  RAISE_APPLICATION_ERROR(-20001, 'Sólo es posible eliminar la opinión si es la última registrada');
	END IF;
END;


/*REGISTRAR ASIGNACION*/

/*EL NUMERO, LA FECHA SE ASIGNAN AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER C_ASIGNACION_NUMERO
AFTER INSERT ON ASIGNACIONES
BEGIN
	/*NUMERO*/
    UPDATE ASGINACIONES SET NUMERO = (SELECT NUMERO FROM (
    SELECT NUMERO FROM ASIGNACIONES ORDER BY NUMERO DESC
    ) WHERE ROWNUM = 1) + 1;
	
	/*FECHA*/
	UPDATE ASIGNACIONES SET FECHA = CURRENT_DATE;
END;


/*REGISTRAR BIENES*/

/*LOS VALORES DE RETIRADO SE ASIGNAN AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER C_ASIGNACION_BIEN
AFTER INSERT ON BIENES
BEGIN
	UPDATE BIENES SET RETIRADO = 0;
END;


-- CREATE ASSERTION CK_NUMERO_PERSONAS
	-- /*ESTA DIFICIL*/
	-- CHECK(
		-- IF (SELECT PERSONAS FROM ALOJAMIENTOS
				-- JOIN DETALLES ON (ALOJAMIENTOS.ORDEN = DETALLES.ORDEN)
					-- JOIN ASIGNACIONES ON (DETALLES.ASIGNACION = ASIGNACIONES.NUMERO)
						-- JOIN FAMILIA AS FAM ON (FAMILIA.ASIGNACION = ASIGNACION.NUMERO))
						-- >= 
						-- (
							-- SELECT COUNT(*) FROM PERSONAS
							-- WHERE PERSONAS.FAMILIA = FAM.NUMERO
						-- )
			
		-- END IF;
	-- )

/*ASSERTION NO ESTA EN ORACLE, PERO EXISTE EN SQL*/

-- CREATE ASSERTION CK_TALLA_PERSONA 
    -- CHECK(
		-- EXISTS(
			-- SELECT TALLA FROM PERSONAS
				-- JOIN FAMILIAS ON(PERSONAS.FAMILIA = FAMILIAS.NUMERO)
					-- JOIN ASIGNACIONES ON(FAMILIAS.ASIGNACION = ASIGNACIONES.NUMERO)
						-- JOIN DETALLES ON (DETALLES.ASIGNACION = ASIGNACIONES.NUMERO)
			-- WHERE DETALLES.ORDEN = VESTUARIOS.ORDEN AND VESTUARIOS.TALLA = PERSONAS.TALLA
		-- )
	-- );
	

--Disparadores OK
--Disparadores no Ok
--xDisparadores
DROP TRIGGER C_OPINION_NUMERO;
DROP TRIGGER C_REGITRAR_RETIRADO;
DROP TRIGGER C_FAMILY_OPINION;
DROP TRIGGER C_OPINION_JUSTIF;
DROP TRIGGER C_OPINION_REPRESENTANTE;
DROP TRIGGER C_JISTIF_MODF;
DROP TRIGGER C_DELETE_OPINION;

--Consultando--
SELECT * FROM OPINIONES
	WHERE (OPINION = 'E');

--Bienes con mala opinion--
SELECT * FROM OPINIONES
	WHERE (OPINION = 'M');
    