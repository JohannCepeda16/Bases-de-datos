CREATE TABLE USUARIOS(
	ID INTEGER NOT NULL, 
	TIPO_USUARIO VARCHAR2(2) NOT NULL, 
	ASESOR NUMBER(4)
);

CREATE TABLE PREFERENCIAS(
	USUARIO INTEGER NOT NULL, 
	SALARIO_ESPERADO NUMBER NOT NULL, 
	MODO_TRABAJO VARCHAR2(2) NOT NULL, 
	DIRECCION XMLTYPE NOT NULL, 
	JORNADA VARCHAR2(1)
);

CREATE TABLE ASESORES(
	CODIGO NUMBER(4) NOT NULL, 
	IDENTIFICACION NUMBER(10) NOT NULL, 
	CELULAR NUMBER(11), 
	CORREO VARCHAR2(30), 
	PRIMER_NOMBRE VARCHAR2(50) NOT NULL, 
	PRIMER_APELLIDO VARCHAR2(50) NOT NULL, 
	DIRECCION VARCHAR2(100) NOT NULL
);

CREATE TABLE OFERTAS(
	CODIGO INTEGER NOT NULL, 
	USUARIO INTEGER NOT NULL, 
	TITULO VARCHAR2(250) NOT NULL, 
	DESCRIPCION VARCHAR2(1000), 
	REQUISITOS VARCHAR2(500) NOT NULL, 
	VACANTES NUMBER(3) NOT NULL, 
	UBICACION VARCHAR2(100) NOT NULL, 
	SALARIO NUMBER NOT NULL, 
	MODO_TRABAJO VARCHAR2(1) NOT NULL
);

CREATE TABLE CONVOCATORIAS(
	CODIGO INTEGER NOT NULL, 
	OFERTA INTEGER NOT NULL, 
	FECHA_INICIO DATE NOT NULL, 
	FECHA_FIN DATE NOT NULL
);

CREATE TABLE CONTRATOS(
	USUARIO INTEGER NOT NULL, 
	CONVOCATORIA INTEGER NOT NULL, 
	OBSERVACIONES VARCHAR2(1000),
    CONTRATADO NUMBER(1)
);

--Atributos--
ALTER TABLE USUARIOS ADD CONSTRAINT CK_USUARIOS_TIPO_USUARIO
  CHECK(TIPO_USUARIO IN ('E','PN'));
ALTER TABLE USUARIOS ADD CONSTRAINT CK_USUARIOS_CODIGO
  CHECK(ID > 0);
ALTER TABLE ASESORES ADD CONSTRAINT CK_ASESORES_IDENTIFICACION
  CHECK(IDENTIFICACION > 0);
ALTER TABLE ASESORES ADD CONSTRAINT CK_ASESORES_CELULAR
  CHECK(CELULAR > 0);
ALTER TABLE PREFERENCIAS ADD CONSTRAINT CK_REFERENCIAS_SALARIO
  CHECK(SALARIO_ESPERADO > 0);
ALTER TABLE OFERTAS ADD CONSTRAINT CK_OFERTAS_SALARIO
  CHECK(SALARIO > 0);
ALTER TABLE PREFERENCIAS ADD CONSTRAINT CK_PREFENCIAS_MODO_TRABAJO
  CHECK(MODO_TRABAJO IN('R','P','SP'));
ALTER TABLE PREFERENCIAS ADD CONSTRAINT CK_PREFERENCIAS_TIPO_JORNADA
	CHECK(JORNADA IN ('D', 'N'));
ALTER TABLE ASESORES ADD CONSTRAINT CK_ASESORES_MAIL
  CHECK(CORREO LIKE ('%@%.%'));
ALTER TABLE CONTRATOS ADD CONSTRAINT CK_CONTRATO_ESTADO
  CHECK(CONTRATADO IN (0,1,2,3)); 
ALTER TABLE OFERTAS ADD CONSTRAINT CK_OFERTAS_VACANTES
  CHECK(VACANTES >= 0);
ALTER TABLE ASESORES ADD CONSTRAINT CK_IDENTIFICACION_VALIDA
  CHECK(IDENTIFICACION > 0);
ALTER TABLE ASESORES ADD CONSTRAINT CK_CELULAR_VALIDO
  CHECK(CELULAR > 0 OR LENGTH(CELULAR) <= 11);

--Primarias--
ALTER TABLE USUARIOS ADD CONSTRAINT PK_USUARIO 
  PRIMARY KEY(ID);
ALTER TABLE PREFERENCIAS ADD CONSTRAINT PK_PREFERENCIAS 
  PRIMARY KEY(USUARIO);
ALTER TABLE ASESORES ADD CONSTRAINT PK_ASESORES 
  PRIMARY KEY(CODIGO);
ALTER TABLE CONVOCATORIAS ADD CONSTRAINT PK_CONVOCATORIAS 
  PRIMARY KEY(CODIGO);
ALTER TABLE CONTRATOS ADD CONSTRAINT PK_CONTRATOS 
  PRIMARY KEY(USUARIO, CONVOCATORIA);
ALTER TABLE OFERTAS ADD CONSTRAINT PK_OFERTAS 
  PRIMARY KEY(CODIGO);

--Unicas--
ALTER TABLE ASESORES ADD CONSTRAINT UK_ASESORES_2
  UNIQUE(CELULAR);
ALTER TABLE ASESORES ADD CONSTRAINT UK_ASESORES_3
  UNIQUE(CORREO);

--Foraneas--
ALTER TABLE USUARIOS ADD CONSTRAINT FK_USUARIOS_ASESORES 
  FOREIGN KEY(ASESOR) REFERENCES ASESORES(CODIGO) ON DELETE SET NULL;
ALTER TABLE PREFERENCIAS ADD CONSTRAINT FK_PREFERENCIAS_USUARIOS 
  FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID) ON DELETE CASCADE;
ALTER TABLE OFERTAS ADD CONSTRAINT FK_OFERTAS_USUARIOS 
  FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID) ON DELETE CASCADE;
ALTER TABLE CONTRATOS ADD CONSTRAINT FK_CONTRATOS_USUARIOS 
  FOREIGN KEY(USUARIO) REFERENCES USUARIOS(ID) ON DELETE CASCADE;
ALTER TABLE CONTRATOS ADD CONSTRAINT FK_CONTRATOS_CONVOCATORIAS 
  FOREIGN KEY(CONVOCATORIA) REFERENCES CONVOCATORIAS(CODIGO) ON DELETE CASCADE;
ALTER TABLE CONVOCATORIAS ADD CONSTRAINT FK_CONVOCATORIAS_OFERTAS 
  FOREIGN KEY(OFERTA) REFERENCES OFERTAS(CODIGO) ON DELETE CASCADE;

--Poblando--

--PoblarOK--
INSERT INTO ASESORES VALUES(0001, 1000713816, 3105555555, 'panamiguel03@yahoo.com', 'josue', 'irion', 'CLL 55 NO 13 14' );
INSERT INTO ASESORES VALUES(0002, 1000435645, 3104444444, 'masterchieff@yahoo.com', 'jhon', 'doe', 'CLL 3 no 44 55' );
INSERT INTO ASESORES VALUES(0003, 5123123231, null , null , 'pepito', 'perez', 'CLL 55 NO 13 14' );

INSERT INTO USUARIOS VALUES(1, 'E', 0001);
INSERT INTO USUARIOS VALUES(2, 'PN', 0002);
INSERT INTO USUARIOS VALUES(3, 'PN', 0002);
INSERT INTO USUARIOS VALUES(4, 'PN', 0003);
INSERT INTO USUARIOS VALUES(5, 'PN', 0003);

INSERT INTO PREFERENCIAS VALUES(2, 900000, 'R', '<DIRECCION dato="Carrera 9 #168 - 30"><DEPARTAMENTO dep = "Bogotá"/><CITY Nombre="Bogota"><Localidad nombre="Usaquen"/><CodigoPostal codigo="110131"/></CITY></DIRECCION>', 'D');
INSERT INTO PREFERENCIAS VALUES(3, 3000000, 'P', '<DIRECCION dato="CLL REY PEPINITO NO 12 5"><DEPARTAMENTO dep = "Bogotá"/><CITY Nombre="Bogota"><Localidad nombre="Teusaquillo"/><CodigoPostal codigo="111321"/></CITY></DIRECCION>', 'D');
INSERT INTO PREFERENCIAS VALUES(4, 1200000, 'SP', '<DIRECCION dato="CLL WALLABY P.SHERMAN"><DEPARTAMENTO dep = "Bogotá"/><CITY Nombre="Bogota"><Localidad nombre="Teusaquillo"/><CodigoPostal codigo="111321"/></CITY></DIRECCION>', 'N');

INSERT INTO OFERTAS VALUES(1,1,'Programadores front python empresa de alimentos', 'Se requieren programadores de python para disenar el aplicativo de una empresa de alimentos','6 meses de experiencia en front', 13, 'cll 170 no 12 13', 2000000, 'D');
INSERT INTO OFERTAS VALUES(2,1,'Programadores backen python empresa de alimentos', 'Se requieren programadores de python para construir el aplicativo de una empresa de alimentos','12 meses de experiencia en baken', 5, 'cll 170 no 12 13', 3714507, 'D');
INSERT INTO OFERTAS VALUES(3,1,'Publicista con experiencia en redes sociales', 'Se necesita publicista para promover empresa de alimentos en redes sociales','8 anos de experiencia y un titulo de harvard, ademas de recien egresado', 1, 'cll 170 no 12 13', 1000000, 'D');

INSERT INTO CONVOCATORIAS VALUES(1, 1, to_date('12 06 2020', 'DD MM YYYY'),CURRENT_DATE);
INSERT INTO CONVOCATORIAS VALUES(2, 1, CURRENT_DATE ,to_date('12 06 2021', 'DD MM YYYY'));
INSERT INTO CONVOCATORIAS VALUES(3, 3, CURRENT_DATE ,to_date('12 12 2020', 'DD MM YYYY'));

INSERT INTO CONTRATOS VALUES(2, 2, 'Le vamos a pagar menos que a otros profesionales que hacen lo mismo solo porque no tiene experiencia y si se queja lo echamos', 1);
INSERT INTO CONTRATOS VALUES(4,1, 'Lo vamos a contratar de todas maneras porque es una empresa de mentiras y lo vamos a ahcer firmar los papeles para usarlo como chivo expiatorio', 0);
INSERT INTO CONTRATOS VALUES(4,3, 'TIENE DISLEXIA GRADO 2', 0);

--PoblarNoOK--
INSERT INTO ASESORES VALUES(-0001, 1000713816, 3105555555, 'panamiguel03@yahoo.com', 'josue', 'irion', 'CLL 55 NO 13 14' );
INSERT INTO ASESORES VALUES(0002, null, 3104444444, 'asdda', 'jhon', 'doe', 'CLL 3 no 44 55' );
INSERT INTO ASESORES VALUES(0003, 5123123231, null , null , 'pepito', 'perez', 'CLL 55 NO 13 14' );

INSERT INTO USUARIOS VALUES(1, 'ASDSA', 0001);
INSERT INTO USUARIOS VALUES(1, 'PSDA', 0002);
INSERT INTO USUARIOS VALUES(-1, 'PNO', 0002);
INSERT INTO USUARIOS VALUES(-3, 'SAD', 0003);

INSERT INTO PREFERENCIAS VALUES(2, -900000, 'R', 'CLL 44D NO 45 30');
INSERT INTO PREFERENCIAS VALUES(3, 3000000, 'asdsa', 'CLL REY PEPINITO NO 12 5');
INSERT INTO PREFERENCIAS VALUES(14, 1200000, 'sdddds', 'CLL WALLABY P.SHERMAN');

INSERT INTO OFERTAS VALUES(24,8,'Programadores front python empresa de alimentos', 'Se requieren programadores de python para disenar el aplicativo de una empresa de alimentos','6 meses de experiencia en front', 6, 'cll 170 no 12 13', 2000000);
INSERT INTO OFERTAS VALUES(2,1,'Programadores backen python empresa de alimentos', 'Se requieren programadores de python para construir el aplicativo de una empresa de alimentos','12 meses de experiencia en baken', -5, 'cll 170 no 12 13', 3714507);
INSERT INTO OFERTAS VALUES(3,1,'Publicista con experiencia en redes sociales', 'Se necesita publicista para promover empresa de alimentos en redes sociales','8 anos de experiencia y un titulo de harvard, ademas de recien egresado', 1, 'cll 170 no 12 13', -1000000);

INSERT INTO CONVOCATORIAS VALUES(1, 1, 'sda',CURRENT_DATE, 'D' );
INSERT INTO CONVOCATORIAS VALUES(2, 1, CURRENT_DATE ,to_date('12 06 2021', 'DD MM YYYY'), 'O' );
INSERT INTO CONVOCATORIAS VALUES(2, 1, CURRENT_DATE ,to_date('12 12 2020', 'DD MM YYYY'), 'N' );

INSERT INTO CONTRATOS VALUES(5, 2, 'Le vamos a pagar menos que a otros profesionales que hacen lo mismo solo porque no tiene experiencia y si se queja lo echamos');
INSERT INTO CONTRATOS VALUES(2, 2, 'Lo vamos a contratar de todas maneras porque es una empresa de mentiras y lo vamos a ahcer firmar los papeles para usarlo como chivo expiatorio');

--XPoblar--

TRUNCATE TABLE USUARIOS;
TRUNCATE TABLE PREFERENCIAS;
TRUNCATE TABLE ASESORES;
TRUNCATE TABLE CONVOCATORIAS;
TRUNCATE TABLE OFERTAS;
TRUNCATE TABLE CONTRATOS;

--XTablas--

DROP TABLE USUARIOS;
DROP TABLE PREFERENCIAS;
DROP TABLE ASESORES;
DROP TABLE CONVOCATORIAS;
DROP TABLE OFERTAS;
DROP TABLE CONTRATOS;


--CONSULTAS
/*SELECCIONAR LOS CLIENTES QUE TIENEN A JOSUE COMO ASESOR*/
--consultaspendientes--

/*DISPARADORES*/

-- REGISTRAR CONVOCATORIA
/*EL CODIGO DE LA CONVOCATORIA SE GENERA AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER T_CONV_CODE
BEFORE INSERT ON CONVOCATORIAS
FOR EACH ROW
DECLARE 
    Y NUMBER;
BEGIN 
    SELECT COUNT(*) INTO Y FROM CONVOCATORIAS;
    :NEW.CODIGO := Y+1;
END;

/*LA FECHA DE INICIO SE ASIGNA AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER T_CONV_DATE
BEFORE INSERT ON CONVOCATORIAS
FOR EACH ROW
BEGIN
	:NEW.FECHA_INICIO := CURRENT_DATE;
END;

-- MODIFICAR CONVOCATORIA
/*NO SE PUEDE MODIFICAR LA FECHA*/
CREATE OR REPLACE TRIGGER T_MODF_DATE
BEFORE UPDATE OF FECHA_INICIO ON CONVOCATORIAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'LA FECHA INICIAL NO SE PUEDE MODIFICAR');
END;

/*NO SE PUEDE MODIFICAR EL CODIGO*/
CREATE OR REPLACE TRIGGER T_MODF_CODIGO
BEFORE UPDATE OF CODIGO ON CONVOCATORIAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL CODIGO DE LA CONVOCATORIA NO SE PUEDE MODIFICAR');
END;

--ADICIONAR OFERTAS
/*EL CODIGO DE OFERTA SE GENERA AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER T_OF_DATE
BEFORE INSERT ON OFERTAS
FOR EACH ROW
DECLARE 
    Y NUMBER;
BEGIN
    SELECT COUNT(*) INTO Y FROM OFERTAS;
	:NEW.CODIGO := Y+1;
END;

-- MODIFICAR OFERTAS
/*EL DATO DEL SALARIO NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_OF_SALARY
BEFORE UPDATE OF SALARIO ON OFERTAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL SALARIO NO SE PUEDE MODIFICAR');
END;

/*EL CODIGO DE OFERTA NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_OF_COD
BEFORE UPDATE OF CODIGO ON OFERTAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL CODIGO DE LA OFERTA NO SE PUEDE MODIFICAR');
END;

--ASESORES
/*EL CODIGO DEL ASESOR SE GENERA AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER T_ASESOR_CODE
BEFORE INSERT ON ASESORES
FOR EACH ROW
DECLARE
    Y NUMBER;
BEGIN
    SELECT COUNT(*) INTO Y FROM ASESORES;
    :NEW.CODIGO := Y+1;
END;

/*SI NO SE INDICA LA DIRECCION, SE DEBE LLENAR EL CAMPO CON 'BOGOTA, COLOMBIA'*/
CREATE OR REPLACE TRIGGER T_ASESOR_DIR
BEFORE INSERT ON ASESORES
FOR EACH ROW
BEGIN 
    IF(:NEW.DIRECCION IS NULL) THEN
        :NEW.DIRECCION := 'BOGOTA, COLOMBIA';
    END IF;
END;

-- MODIFICAR ASESORES
/*EL CODIGO DEL ASESOR NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_MODF_COD_ASESOR
BEFORE UPDATE OF CODIGO ON ASESORES
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL CODIGO DEL ASESOR NO SE PUEDE MODIFICAR');
END;

/*EL NUMERO DE IDENTIFICACION DEL ASESOR NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_MODF_ID_ASESOR
BEFORE UPDATE OF IDENTIFICACION ON ASESORES
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL NUMERO DE IDENTIFICACION DEL ASESOR NO ES MODIFICABLE');
END;

--PREFERENCIAS--
/*El salario esperado no puede ser menor al salario minimo*/
CREATE OR REPLACE TRIGGER T_ADD_PREFERENCIAS_SALARIO
BEFORE INSERT ON PREFERENCIAS
FOR EACH ROW
BEGIN
    IF :NEW.SALARIO_ESPERADO < 977803
    THEN
        RAISE_APPLICATION_ERROR(-20001, 'EL SALARIO ESPERADO TIENE QUE SER MAYOR O IGUAL AL SALARIO MINIMO');
    END IF;
END;
/*Solo los usuarios con tipo de usuario 'PN' pueden tener preferencias*/
CREATE OR REPLACE TRIGGER T_ADD_PREFERENCIAS_USUARIO
BEFORE INSERT ON PREFERENCIAS
FOR EACH ROW
DECLARE
    Y NUMBER;
BEGIN
	SELECT COUNT(TIPO_USUARIO) INTO Y FROM USUARIOS WHERE USUARIOS.ID = :NEW.USUARIO AND USUARIOS.TIPO_USUARIO = 'PN';
    IF Y < 1
	THEN
		RAISE_APPLICATION_ERROR(-20001, 'SOLO LOS USUARIOS QUE SON PERSONAS NATURALES PUEDEN TENER PREFERENCIAS');
	END IF;
END;

--ADICIONAR CONTRATO
/*SI UN CONTRATO NO TIENE OBSERVACIONES EL CAMPO SE LLENA CON 'SIN OBSERVACIONES'*/
CREATE OR REPLACE TRIGGER T_ADD_CONTRATO
BEFORE INSERT ON CONTRATOS
FOR EACH ROW
BEGIN
    IF(:NEW.OBSERVACIONES IS NULL) THEN
        :NEW.OBSERVACIONES := 'SIN OBSERVACIONES';
    END IF;
END;

/*EL UNICO DATO QUE SE PUEDE MODIFICAR ES CONTRATADO*/
CREATE OR REPLACE TRIGGER T_MODF_CONTRATO
BEFORE UPDATE OF OBSERVACIONES, USUARIO, CONVOCATORIA ON CONTRATOS
FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR('-20001', 'EL UNICO DATO QUE SE PUEDE MODIFICAR ES EL ESTADO DEL CONTRATO (CONTRATADO)');
END;

/*LOS CONTRATOS NO SE PUEDEN ELIMINAR*/
CREATE OR REPLACE TRIGGER T_DEL_CONTRATO
BEFORE DELETE ON CONTRATOS
FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR('-20001','LOS CONTRATOS NO SE PUEDEN ELIMINAR');
END;

----------------------------------------------DISPARADORES OK ---------------------------------
--------------CONVOCATORIAS--------------
/*LA FECHA Y EL CODIGO SE GENERAN AUTOMATICAMENTE*/
INSERT INTO CONVOCATORIAS VALUES(null,1,null,to_date('12 06 2021', 'DD MM YYYY'));
INSERT INTO CONVOCATORIAS VALUES(null,2,null,to_date('12 06 2022', 'DD MM YYYY'));
SELECT CODIGO,FECHA_INICIO FROM CONVOCATORIAS;

----------------OFERTAS-----------------
/*EL CODIGO DE OFERTA SE GENERA AUTOMATICAMENTE*/
INSERT INTO OFERTAS VALUES(1, 1, 'PRACTICAS PROFESIONALES', 'SE BUSCAN PRACTICANTES DE INGENIERIA DE SISTEMAS PARA TRABAJO EN BOGOTA', '+3 EXPERIENCIA' ,20, 'BOGOTA','897890','R');
SELECT CODIGO FROM OFERTAS;

----------------ASESORES----------------
/*EL CODIGO DEL ASESOR SE GENERA AUTOMATICAMENTE*/
INSERT INTO ASESORES VALUES(null,'1020310','123','123@GMAIL.COM','JUAN','COPETE','BOGOTA');
SELECT CODIGO FROM ASESORES;
/*SI NO SE INDICA LA DIRECCION, SE DEBE LLENAR EL CAMPO CON 'BOGOTA, COLOMBIA'*/
INSERT INTO ASESORES VALUES(1,'856874','12123413','1221343@GMAIL.COM','JUAN','COPETE',null);
SELECT DIRECCION FROM ASESORES ORDER BY CODIGO DESC;
/*SI UN ASESOR SE ELIMINA, EL USUARIO QUE TENIA ASIGNADO ESE ASESOR, QUEDA CON UN VALOR NULL*/
DELETE FROM ASESORES WHERE CODIGO = 1;
SELECT * FROM USUARIOS;

--CONTRATOS---
/*SI UN CONTRATO NO TIENE OBSERVACIONES EL CAMPO SE LLENA CON 'SIN OBSERVACIONES'*/
INSERT INTO CONTRATOS VALUES(1, 1, null, 1);
SELECT * FROM CONTRATOS;

----------------------------------------------DISPARADORES NO OK ---------------------------------
/*CONVOCATORIAS*/
/*LA FECHA DE INICIIO NO SE PUEDE MODIFICAR*/
UPDATE CONVOCATORIAS SET FECHA_INICIO = to_date('12 06 2021', 'DD MM YYYY');
/*EL CODIGO NO SE PUEDE MODIFICAR*/
UPDATE CONVOCATORIAS SET CODIGO = -1;

----------------OFERTAS-----------------
/*EL DATO DEL SALARIO NO SE PUEDE MODIFICAR*/
UPDATE OFERTAS SET SALARIO = 1234567;
/*EL CODIGO DE OFERTA NO SE PUEDE MODIFICAR*/
UPDATE OFERTAS SET CODIGO = -1;

----------------ASESORES----------------
/*EL CODIGO DEL ASESOR NO SE PUEDE MODIFICAR*/
UPDATE ASESORES SET CODIGO = -1;
/*EL NUMERO DE IDENTIFICACION DEL ASESOR NO SE PUEDE MODIFICAR*/
UPDATE ASESORES SET IDENTIFICACION = -1;

--ADICIONAR PREFERENCIA
/*El salario esperado no puede ser menor al salario minimo*/
INSERT INTO PREFERENCIAS VALUES(1, 1000, 'R', 'BOGOTA, USAQUEN', 'D');

----CONTRATOS----
/*EL UNICO DATO QUE SE PUEDE MODIFICAR ES CONTRATADO*/
UPDATE CONTRATOS SET USUARIO = -1;
/*LOS CONTRATOS NO SE PUEDEN ELIMINAR*/
DELETE FROM CONTRATOS WHERE USUARIO = 1;

-----------------------XDisparadores----------------
DROP TRIGGER T_ADD_CONTRATO;
DROP TRIGGER T_ADD_PREFERENCIAS_SALARIO;
DROP TRIGGER T_ADD_PREFERENCIAS_USUARIO;
DROP TRIGGER T_ASESOR_CODE;
DROP TRIGGER T_ASESOR_DIR;
DROP TRIGGER T_CONV_CODE;
DROP TRIGGER T_CONV_DATE;
DROP TRIGGER T_DEL_CONTRATO;
DROP TRIGGER T_MODF_COD_ASESOR;
DROP TRIGGER T_MODF_CODIGO;
DROP TRIGGER T_MODF_CONTRATO;
DROP TRIGGER T_MODF_DATE;
DROP TRIGGER T_MODF_ID_ASESOR;
DROP TRIGGER T_OF_COD;
DROP TRIGGER T_OF_DATE;
DROP TRIGGER T_OF_SALRY;

---------------------------------------VISTAS---------------------------------
CREATE OR REPLACE VIEW CONTRATOS_ABIERTOS AS (
    SELECT *
    FROM CONTRATOS
    WHERE CONTRATADO = 0
);

SELECT * FROM CONTRATOS_ABIERTOS;

CREATE OR REPLACE VIEW CONTRATOS_CERRADOS AS(
    SELECT *
    FROM CONTRATOS
    WHERE CONTRATADO = 1 OR CONTRATADO = 2 OR CONTRATADO =3
);

SELECT * FROM CONTRATOS_CERRADOS;

-------------XVISTAS---------------
DROP VIEW CONTRATOS_ABIERTOS;
DROP VIEW CONTRATOS_CERRADOS;

---------------------------INDICES------------------------------------
CREATE INDEX IASESOR ON ASESORES(IDENTIFICACION);

---------------------------X INDICES--------------------------
DROP INDEX IASESOR;
--------------------------------------------------------
BEGIN
   FOR cur_rec IN (SELECT object_name, object_type
                     FROM user_objects
                    WHERE object_type IN
                             ('TABLE',
                              'VIEW',
                              'PACKAGE',
                              'PROCEDURE',
                              'FUNCTION',
                              'SEQUENCE',
                              'SYNONYM',
                              'PACKAGE BODY'
                             ))
   LOOP
      BEGIN
         IF cur_rec.object_type = 'TABLE'
         THEN
            EXECUTE IMMEDIATE    'DROP '
                              || cur_rec.object_type
                              || ' "'
                              || cur_rec.object_name
                              || '" CASCADE CONSTRAINTS';
         ELSE
            EXECUTE IMMEDIATE    'DROP '
                              || cur_rec.object_type
                              || ' "'
                              || cur_rec.object_name
                              || '"';
         END IF;
      EXCEPTION
         WHEN OTHERS
         THEN
            DBMS_OUTPUT.put_line (   'FAILED: DROP '
                                  || cur_rec.object_type
                                  || ' "'
                                  || cur_rec.object_name
                                  || '"'
                                 );
      END;
   END LOOP;
END;

create or replace
procedure reset_seq( p_seq_name in varchar2 )
is
    l_val number;
begin
    execute immediate
    'select ' || p_seq_name || '.nextval from dual' INTO l_val;

    execute immediate
    'alter sequence ' || p_seq_name || ' increment by -' || l_val || 
                                                          ' minvalue 0';

    execute immediate
    'select ' || p_seq_name || '.nextval from dual' INTO l_val;

    execute immediate
    'alter sequence ' || p_seq_name || ' increment by 1 minvalue 0';
end;