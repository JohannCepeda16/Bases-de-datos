-- REGISTRAR CONVOCATORIA
/*LA FECHA DE INICIO SE ASIGNA AUTOMATICAMENTE*/
CREATE OR REPLACE TRIGGER T_CONV_DATE
BEFORE INSERT ON CONVOCATORIAS
FOR EACH ROW
BEGIN
	:NEW.FECHA_INICIO := CURRENT_DATE;
END;
/
-- MODIFICAR CONVOCATORIA
/*NO SE PUEDE MODIFICAR LA FECHA*/
CREATE OR REPLACE TRIGGER T_MODF_DATE
BEFORE UPDATE OF FECHA_INICIO ON CONVOCATORIAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'LA FECHA INICIAL NO SE PUEDE MODIFICAR');
END;
/
/*NO SE PUEDE MODIFICAR EL CODIGO*/
CREATE OR REPLACE TRIGGER T_MODF_CODIGO
BEFORE UPDATE OF CODIGO ON CONVOCATORIAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL CODIGO DE LA CONVOCATORIA NO SE PUEDE MODIFICAR');
END;
/
-- MODIFICAR OFERTAS
/*EL DATO DEL SALARIO NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_OF_SALARY
BEFORE UPDATE OF SALARIO ON OFERTAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL SALARIO NO SE PUEDE MODIFICAR');
END;
/
/*EL CODIGO DE OFERTA NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_OF_COD
BEFORE UPDATE OF CODIGO ON OFERTAS
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL CODIGO DE LA OFERTA NO SE PUEDE MODIFICAR');
END;
/
--ASESORES
/*SI NO SE INDICA LA DIRECCION, SE DEBE LLENAR EL CAMPO CON 'BOGOTA, COLOMBIA'*/
CREATE OR REPLACE TRIGGER T_ASESOR_DIR
BEFORE INSERT ON ASESORES
FOR EACH ROW
BEGIN 
    IF(:NEW.DIRECCION IS NULL) THEN
        :NEW.DIRECCION := 'BOGOTA, COLOMBIA';
    END IF;
END;
/
-- MODIFICAR ASESORES
/*EL CODIGO DEL ASESOR NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_MODF_COD_ASESOR
BEFORE UPDATE OF CODIGO ON ASESORES
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL CODIGO DEL ASESOR NO SE PUEDE MODIFICAR');
END;
/
/*EL NUMERO DE IDENTIFICACION DEL ASESOR NO SE PUEDE MODIFICAR*/
CREATE OR REPLACE TRIGGER T_MODF_ID_ASESOR
BEFORE UPDATE OF IDENTIFICACION ON ASESORES
FOR EACH ROW
BEGIN
	RAISE_APPLICATION_ERROR(-20001, 'EL NUMERO DE IDENTIFICACION DEL ASESOR NO ES MODIFICABLE');
END;
/
--PREFERENCIAS--
/*El salario esperado no puede ser menor al salario minimo*/
CREATE OR REPLACE TRIGGER T_ADD_PREFERENCIAS_SALARIO
BEFORE INSERT ON PREFERENCIAS
FOR EACH ROW
BEGIN
    IF :NEW.SALARIO_ESPERADO < 977803
    THEN
        RAISE_APPLICATION_ERROR(-20001, 'EL SALARIO ESPERADO TIENE QUE SER MAYOR O IGUAL AL SALARIO MINIMO');
    END IF;
END;
/
/*Solo los usuarios con tipo de usuario 'PN' pueden tener preferencias*/
CREATE OR REPLACE TRIGGER T_ADD_PREFERENCIAS_USUARIO
BEFORE INSERT ON PREFERENCIAS
FOR EACH ROW
DECLARE
    Y NUMBER;
BEGIN
	SELECT COUNT(TIPO_USUARIO) INTO Y FROM USUARIOS WHERE USUARIOS.ID = :NEW.USUARIO AND USUARIOS.TIPO_USUARIO = 'PN';
    IF Y < 1
	THEN
		RAISE_APPLICATION_ERROR(-20001, 'SOLO LOS USUARIOS QUE SON PERSONAS NATURALES PUEDEN TENER PREFERENCIAS');
	END IF;
END;
/
--ADICIONAR CONTRATO
/*SI UN CONTRATO NO TIENE OBSERVACIONES EL CAMPO SE LLENA CON 'SIN OBSERVACIONES'*/
CREATE OR REPLACE TRIGGER T_ADD_CONTRATO
BEFORE INSERT ON CONTRATOS
FOR EACH ROW
BEGIN
    IF(:NEW.OBSERVACIONES IS NULL) THEN
        :NEW.OBSERVACIONES := 'SIN OBSERVACIONES';
    END IF;
END;
/
/*EL UNICO DATO QUE SE PUEDE MODIFICAR ES CONTRATADO*/
CREATE OR REPLACE TRIGGER T_MODF_CONTRATO
BEFORE UPDATE OF OBSERVACIONES, USUARIO, CONVOCATORIA ON CONTRATOS
FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR('-20001', 'EL UNICO DATO QUE SE PUEDE MODIFICAR ES EL ESTADO DEL CONTRATO (CONTRATADO)');
END;
/
--------------------SECUENCIAS---------------------------
/*EL CODIGO DE LA CONVOCATORIA SE GENERA AUTOMATICAMENTE*/
declare
    a_new_seq INTEGER;
begin
   select max(CODIGO) + 1
   into   a_new_seq
   from   CONVOCATORIAS;

    execute immediate 'Create sequence seq_convocatorias
                       start with ' || a_new_seq ||
                       ' increment by 1';
end;
/
/*EL CODIGO DE OFERTA SE GENERA AUTOMATICAMENTE*/
declare
    b_new_seq INTEGER;
begin
   select max(CODIGO) + 1
   into   b_new_seq
   from   OFERTAS;

    execute immediate 'Create sequence seq_ofertas
                       start with ' || b_new_seq ||
                       ' increment by 1';
end;
/
/*EL CODIGO DEL ASESOR SE GENERA AUTOMATICAMENTE*/
declare
    c_new_seq INTEGER;
begin
   select max(CODIGO) + 1
   into   c_new_seq
   from   ASESORES;

    execute immediate 'Create sequence seq_asesores
                       start with ' || c_new_seq ||
                       ' increment by 1';
                       
    c_new_seq:=0;
end;
/
/*EL CODIGO DEL USUARIO SE GENERA AUTOMATICAMENTE*/
declare
    d_new_seq INTEGER;
begin
   select max(ID) + 1
   into   d_new_seq
   from   USUARIOS;

    execute immediate 'Create sequence seq_usuarios
                       start with ' || d_new_seq ||
                       ' increment by 1';
end;